package com.bobmowzie.mowziesmobs.client.model.entity;

import com.bobmowzie.mowziesmobs.client.model.tools.SocketModelRenderer;
import com.bobmowzie.mowziesmobs.server.entity.barakoa.EntityBarako;
import com.bobmowzie.mowziesmobs.server.potion.PotionHandler;
import net.ilexiconn.llibrary.client.model.tools.AdvancedModelRenderer;
import net.minecraft.client.model.ModelBox;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

@SideOnly(Side.CLIENT)
public class ModelBarako extends MowzieEntityModel<EntityBarako> {
    public AdvancedModelRenderer body;
    public AdvancedModelRenderer chest;
    public AdvancedModelRenderer rightThigh;
    public AdvancedModelRenderer leftThigh;
    public AdvancedModelRenderer neckJoint;
    public AdvancedModelRenderer rightArmJoint;
    public AdvancedModelRenderer leftArmJoint;
    public AdvancedModelRenderer neck;
    public AdvancedModelRenderer headJoint;
    public AdvancedModelRenderer head;
    public AdvancedModelRenderer maskBase;
    public AdvancedModelRenderer maskFace;
    public AdvancedModelRenderer headdress1;
    public AdvancedModelRenderer headdress2;
    public AdvancedModelRenderer headdress3;
    public AdvancedModelRenderer headdress4;
    public AdvancedModelRenderer headdress5;
    public AdvancedModelRenderer headdress6;
    public AdvancedModelRenderer headdress7;
    public AdvancedModelRenderer rightEar;
    public AdvancedModelRenderer leftEar;
    public AdvancedModelRenderer maskMouth;
    public AdvancedModelRenderer forehead;
    public AdvancedModelRenderer nose;
    public AdvancedModelRenderer upperLip;
    public AdvancedModelRenderer jaw;
    public AdvancedModelRenderer teethTop;
    public AdvancedModelRenderer lowerLip;
    public AdvancedModelRenderer leftLip;
    public AdvancedModelRenderer rightLip;
    public AdvancedModelRenderer teethBottom;
    public AdvancedModelRenderer rightEarring;
    public AdvancedModelRenderer leftEarring;
    public AdvancedModelRenderer rightUpperArm;
    public AdvancedModelRenderer rightLowerArm;
    public AdvancedModelRenderer rightHand;
    public AdvancedModelRenderer leftUpperArm;
    public AdvancedModelRenderer leftLowerArm;
    public AdvancedModelRenderer leftHand;
    public AdvancedModelRenderer rightCalf;
    public AdvancedModelRenderer rightFoot;
    public AdvancedModelRenderer leftCalf;
    public AdvancedModelRenderer leftFoot;
    public AdvancedModelRenderer hair1;
    public AdvancedModelRenderer hair2;
    public AdvancedModelRenderer hair3;
    public AdvancedModelRenderer hair4;
    public AdvancedModelRenderer jiggleController;
    public AdvancedModelRenderer jawScaler;
    public AdvancedModelRenderer mouthScalerX;
    public AdvancedModelRenderer mouthScalerY;
    public AdvancedModelRenderer bellyScaler;
    public AdvancedModelRenderer lookController;
    public SocketModelRenderer betweenHands;

    public ModelBarako() {
        this.textureWidth = 128;
        this.textureHeight = 128;
        this.body = new AdvancedModelRenderer(this, 0, 0);
        this.body.setRotationPoint(0.0F, 24.0F, -3.0F);
        this.body.addBox(-12.5F, -16.0F, -11.0F, 25, 16, 22, 0.0F);
        body.scaleChildren = true;
        this.teethTop = new AdvancedModelRenderer(this, 0, 120);
        this.teethTop.setRotationPoint(0.0F, 0.0F, 1.001F);
        this.teethTop.addBox(-4.0F, 0.0F, 0.0F, 8, 1, 1, 0.0F);
        teethTop.scaleChildren = true;
        this.maskBase = new AdvancedModelRenderer(this, 0, 0);
        this.maskBase.setRotationPoint(0.0F, -5.0F, -6.0F);
        this.maskBase.addBox(0.0F, 0.0F, 0.0F, 0, 0, 0, 0.0F);
        maskBase.scaleChildren = true;
        this.leftEar = new AdvancedModelRenderer(this, 38, 109);
        this.leftEar.mirror = true;
        this.leftEar.setRotationPoint(6.0F, -2.0F, 0.0F);
        this.leftEar.addBox(0.0F, 0.0F, 0.0F, 3, 6, 2, 0.0F);
        this.setRotateAngle(leftEar, 0.0F, -0.5235987755982988F, 0.0F);
        this.rightEarring = new AdvancedModelRenderer(this, 0, 84);
        this.rightEarring.mirror = true;
        this.rightEarring.setRotationPoint(-2.5F, 6.0F, 1.0F);
        this.rightEarring.addBox(-2.0F, 0.0F, 0.0F, 4, 4, 0, 0.0F);
        this.headdress3 = new AdvancedModelRenderer(this, 27, 76);
        this.headdress3.mirror = true;
        this.headdress3.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.headdress3.addBox(-3.0F, -18.0F, 0.0F, 6, 12, 0, 0.0F);
        this.setRotateAngle(headdress3, 0.5235987755982988F, (float) Math.PI, 1.3962634015954636F);
        this.leftLowerArm = new AdvancedModelRenderer(this, 56, 38);
        this.leftLowerArm.mirror = true;
        this.leftLowerArm.setRotationPoint(3.5F, 14.0F, 0.0F);
        this.leftLowerArm.addBox(-5.0F, 0.0F, -2.5F, 5, 11, 5, 0.0F);
        leftLowerArm.scaleChildren = true;
        this.setRotateAngle(leftLowerArm, 0.0F, 0.0F, 1.2217304763960306F);
        this.rightCalf = new AdvancedModelRenderer(this, 72, 0);
        this.rightCalf.setRotationPoint(0.0F, 14.0F, -4.0F);
        this.rightCalf.addBox(-3.0F, 0.0F, 0.0F, 6, 10, 6, 0.0F);
        rightCalf.scaleChildren = true;
        this.setRotateAngle(rightCalf, 1.1838568316277536F, 0.0F, 0.0F);
        this.rightUpperArm = new AdvancedModelRenderer(this, 38, 88);
        this.rightUpperArm.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.rightUpperArm.addBox(-3.5F, 0.0F, -3.5F, 7, 14, 7, 0.0F);
        rightUpperArm.scaleChildren = true;
        this.setRotateAngle(rightUpperArm, -1.2217304763960306F, 1.0471975511965976F, 0.0F);
        this.lowerLip = new AdvancedModelRenderer(this, 50, 124);
        this.lowerLip.mirror = true;
        this.lowerLip.setRotationPoint(0.0F, 4.0F, 0.0F);
        this.lowerLip.addBox(-6.0F, 0.0F, -2.0F, 12, 2, 2, 0.0F);
        this.lowerLip.scaleChildren = true;
        this.setRotateAngle(lowerLip, 0.0F, 0.0F, 3.141592653589793F);
        this.rightFoot = new AdvancedModelRenderer(this, 83, 27);
        this.rightFoot.setRotationPoint(0.0F, 11.0F, 5.0F);
        this.rightFoot.addBox(-4.0F, -2.0F, -10.0F, 8, 4, 11, 0.0F);
        rightFoot.scaleChildren = true;
        this.setRotateAngle(rightFoot, -0.17453292519943295F, 0.0F, 0.0F);
        this.headdress2 = new AdvancedModelRenderer(this, 27, 76);
        this.headdress2.mirror = true;
        this.headdress2.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.headdress2.addBox(-3.0F, -18.0F, 0.0F, 6, 12, 0, 0.0F);
        headdress2.scaleChildren = true;
        this.setRotateAngle(headdress2, 0.5235987755982988F, (float) Math.PI, 0.6981317007977318F);
        this.neckJoint = new AdvancedModelRenderer(this, 0, 0);
        this.neckJoint.setRotationPoint(0.0F, -8.0F, 10.0F);
        this.neckJoint.addBox(0.0F, 0.0F, 0.0F, 0, 0, 0, 0.0F);
        neckJoint.scaleChildren = true;
        this.setRotateAngle(neckJoint, 0.2617993877991494F, 0.0F, 0.0F);
        this.rightThigh = new AdvancedModelRenderer(this, 39, 66);
        this.rightThigh.setRotationPoint(-8.5F, -4.0F, 4.0F);
        this.rightThigh.addBox(-4.0F, 0.0F, -4.0F, 8, 14, 8, 0.0F);
        rightThigh.scaleChildren = true;
        this.setRotateAngle(rightThigh, -1.3962634015954636F, 0.6108652381980153F, 0.0F);
        this.neck = new AdvancedModelRenderer(this, 0, 62);
        this.neck.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.neck.addBox(-3.0F, -7.5F, -4.0F, 6, 10, 7, 0.0F);
        neck.scaleChildren = true;
        this.setRotateAngle(neck, 0.3490658503988659F, 0.0F, 0.0F);
        this.headdress4 = new AdvancedModelRenderer(this, 27, 76);
        this.headdress4.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.headdress4.addBox(-3.0F, -18.0F, 0.0F, 6, 12, 0, 0.0F);
        this.setRotateAngle(headdress4, 0.5235987755982988F, (float) Math.PI, -0.6981317007977318F);
        this.forehead = new AdvancedModelRenderer(this, 0, 122);
        this.forehead.setRotationPoint(0.0F, -6.0F, 0.0F);
        this.forehead.addBox(-6.0F, -0.0F, -2.0F, 12, 4, 2, 0.0F);
        this.leftUpperArm = new AdvancedModelRenderer(this, 38, 88);
        this.leftUpperArm.mirror = true;
        this.leftUpperArm.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.leftUpperArm.addBox(-3.5F, 0.0F, -3.5F, 7, 14, 7, 0.0F);
        leftUpperArm.scaleChildren = true;
        this.setRotateAngle(leftUpperArm, -1.2217304763960306F, -1.0471975511965976F, 0.0F);
        this.teethBottom = new AdvancedModelRenderer(this, 0, 120);
        this.teethBottom.setRotationPoint(0.0F, 3.0F, 0.0F);
        this.teethBottom.addBox(-4.0F, -1.0F, 0.0F, 8, 1, 1, 0.0F);
        this.setRotateAngle(teethBottom, 3.141592653589793F, 0.0F, -3.141592653589793F);
        this.headdress5 = new AdvancedModelRenderer(this, 27, 76);
        this.headdress5.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.headdress5.addBox(-3.0F, -18.0F, 0.0F, 6, 12, 0, 0.0F);
        this.setRotateAngle(headdress5, 0.5235987755982988F, (float) Math.PI, -1.3962634015954636F);
        this.leftFoot = new AdvancedModelRenderer(this, 83, 27);
        this.leftFoot.mirror = true;
        this.leftFoot.setRotationPoint(0.0F, 11.0F, 5.0F);
        this.leftFoot.addBox(-4.0F, -2.0F, -10.0F, 8, 4, 11, 0.0F);
        this.setRotateAngle(leftFoot, -0.17453292519943295F, 0.0F, 0.0F);
        this.rightLowerArm = new AdvancedModelRenderer(this, 56, 38);
        this.rightLowerArm.setRotationPoint(-3.5F, 14.0F, 0.0F);
        this.rightLowerArm.addBox(0.0F, 0.0F, -2.5F, 5, 11, 5, 0.0F);
        rightLowerArm.scaleChildren = true;
        this.setRotateAngle(rightLowerArm, 0.0F, 0.0F, -1.2217304763960306F);
        this.leftCalf = new AdvancedModelRenderer(this, 72, 0);
        this.leftCalf.mirror = true;
        this.leftCalf.setRotationPoint(0.0F, 14.0F, -4.0F);
        this.leftCalf.addBox(-3.0F, 0.0F, 0.0F, 6, 10, 6, 0.0F);
        leftCalf.scaleChildren = true;
        this.setRotateAngle(leftCalf, 1.1838568316277536F, 0.0F, 0.0F);
        this.rightHand = new SocketModelRenderer(this, 0, 43);
        this.rightHand.setRotationPoint(2.5F, 11.0F, 0.0F);
        this.rightHand.addBox(-3.0F, 0.0F, -1.5F, 6, 8, 3, 0.0F);
        this.setRotateAngle(rightHand, 1.0471975511965976F, 0.6981317007977318F, 0.0F);
        this.headdress1 = new AdvancedModelRenderer(this, 27, 76);
        this.headdress1.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.headdress1.addBox(-3.0F, -18.0F, 0.0F, 6, 12, 0, 0.0F);
        this.setRotateAngle(headdress1, 0.5235987755982988F, (float) Math.PI, 0.0F);
        this.leftThigh = new AdvancedModelRenderer(this, 39, 66);
        this.leftThigh.mirror = true;
        this.leftThigh.setRotationPoint(8.5F, -4.0F, 4.0F);
        this.leftThigh.addBox(-4.0F, 0.0F, -4.0F, 8, 14, 8, 0.0F);
        leftThigh.scaleChildren = true;
        this.setRotateAngle(leftThigh, -1.3962634015954636F, -0.6108652381980153F, 0.0F);
        this.jaw = new AdvancedModelRenderer(this, 48, 109);
        this.jaw.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.jaw.addBox(-6.0F, 0.0F, 0.0F, 12, 4, 7, 0.01F);
        this.jaw.scaleChildren = true;
        this.leftLip = new AdvancedModelRenderer(this, 26, 120);
        this.leftLip.mirror = true;
        this.leftLip.setRotationPoint(6.0F, 0.0F, 0.0F);
        this.leftLip.addBox(-2.0F, 0.0F, -2.0F, 2, 2, 2, 0.0F);
        leftLip.scaleChildren = true;
        this.maskMouth = new AdvancedModelRenderer(this, 0, 0);
        this.maskMouth.setRotationPoint(0.0F, 5.0F, 0.0F);
        this.maskMouth.addBox(0.0F, 0.0F, 0.0F, 0, 0, 0, 0.0F);
        maskMouth.scaleChildren = true;
        this.nose = new AdvancedModelRenderer(this, 34, 117);
        this.nose.setRotationPoint(0.0F, -4.0F, 0.0F);
        this.nose.addBox(-2.0F, 0.0F, 0.0F, 4, 7, 4, 0.0F);
        this.setRotateAngle(nose, -0.5235987755982988F, 0.0F, 0.0F);
        this.rightArmJoint = new AdvancedModelRenderer(this, 0, 0);
        this.rightArmJoint.setRotationPoint(-6.0F, -6.0F, 9.0F);
        this.rightArmJoint.addBox(0.0F, 0.0F, 0.0F, 0, 0, 0, 0.0F);
        rightArmJoint.scaleChildren = true;
        this.setRotateAngle(rightArmJoint, 0.2617993877991494F, 0.0F, 0.0F);
        this.leftArmJoint = new AdvancedModelRenderer(this, 0, 0);
        this.leftArmJoint.setRotationPoint(6.0F, -6.0F, 9.0F);
        this.leftArmJoint.addBox(0.0F, 0.0F, 0.0F, 0, 0, 0, 0.0F);
        leftArmJoint.scaleChildren = true;
        this.setRotateAngle(leftArmJoint, 0.2617993877991494F, 0.0F, 0.0F);
        this.headdress7 = new AdvancedModelRenderer(this, 27, 76);
        this.headdress7.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.headdress7.addBox(-3.0F, -18.0F, 0.0F, 6, 12, 0, 0.0F);
        this.setRotateAngle(headdress7, 0.5235987755982988F, (float) Math.PI, -2.0943951023931953F);
        this.rightLip = new AdvancedModelRenderer(this, 26, 120);
        this.rightLip.setRotationPoint(-6.0F, 0.0F, 0.0F);
        this.rightLip.addBox(0.0F, 0.0F, -2.0F, 2, 2, 2, 0.0F);
        leftLip.scaleChildren = true;
        this.upperLip = new AdvancedModelRenderer(this, 50, 124);
        this.upperLip.setRotationPoint(0.0F, 0.0F, -2.0F);
        this.upperLip.addBox(-6.0F, -2.0F, 0.0F, 12, 2, 2, 0.0F);
        upperLip.scaleChildren = true;
        this.leftHand = new SocketModelRenderer(this, 0, 43);
        this.leftHand.mirror = true;
        this.leftHand.setRotationPoint(-2.5F, 11.0F, 0.0F);
        this.leftHand.addBox(-3.0F, 0.0F, -1.5F, 6, 8, 3, 0.0F);
        this.setRotateAngle(leftHand, 1.0471975511965976F, -0.6981317007977318F, 0.0F);
        this.rightEar = new AdvancedModelRenderer(this, 38, 109);
        this.rightEar.setRotationPoint(-6.0F, -2.0F, 0.0F);
        this.rightEar.addBox(-3.0F, 0.0F, 0.0F, 3, 6, 2, 0.0F);
        this.setRotateAngle(rightEar, 0.0F, 0.5235987755982988F, 0.0F);
        this.headJoint = new AdvancedModelRenderer(this, 0, 0);
        this.headJoint.setRotationPoint(0.0F, -6.0F, 0.0F);
        this.headJoint.addBox(0.0F, 0.0F, 0.0F, 0, 0, 0, 0.0F);
        headJoint.scaleChildren = true;
        this.setRotateAngle(headJoint, -0.3490658503988659F, 0.0F, 0.0F);
        this.headdress6 = new AdvancedModelRenderer(this, 27, 76);
        this.headdress6.mirror = true;
        this.headdress6.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.headdress6.addBox(-3.0F, -18.0F, 0.0F, 6, 12, 0, 0.0F);
        this.setRotateAngle(headdress6, 0.5235987755982988F, (float) Math.PI, 2.0943951023931953F);
        this.chest = new AdvancedModelRenderer(this, 2, 38);
        this.chest.setRotationPoint(0.0F, -16.0F, -7.0F);
        this.chest.addBox(-9.5F, -8.0F, 0.0F, 19, 8, 16, 0.0F);
        chest.scaleChildren = true;
        this.setRotateAngle(chest, -0.2617993877991494F, 0.0F, 0.0F);
        this.leftEarring = new AdvancedModelRenderer(this, 0, 84);
        this.leftEarring.mirror = true;
        this.leftEarring.setRotationPoint(2.5F, 6.0F, 1.0F);
        this.leftEarring.addBox(-2.0F, 0.0F, 0.0F, 4, 4, 0, 0.0F);
        this.maskFace = new AdvancedModelRenderer(this, 0, 97);
        this.maskFace.setRotationPoint(0.0F, 0.0F, -2.0F);
        this.maskFace.addBox(-6.0F, -6.0F, 0.0F, 12, 15, 7, 0.0F);
        maskFace.scaleChildren = true;
        this.head = new AdvancedModelRenderer(this, 0, 79);
        this.head.setRotationPoint(0.0F, 0.0F, -1.0F);
        this.head.addBox(-4.5F, -9.0F, -4.5F, 9, 9, 9, 0.0F);
        head.scaleChildren = true;
        
        hair1 = new AdvancedModelRenderer(this);
        hair1.setRotationPoint(0.0F, -9.0F, -1.0F);
        head.addChild(hair1);
        setRotateAngle(hair1, 0.3491F, 0.0F, 0.0F);
        hair1.cubeList.add(new ModelBox(hair1, 79, 121, -9.0F, 0.0F, 0.0F, 18, 0, 7, 0.0F, false));

        hair2 = new AdvancedModelRenderer(this);
        hair2.setRotationPoint(0.0F, -9.0F, 2.0F);
        head.addChild(hair2);
        hair2.cubeList.add(new ModelBox(hair2, 79, 121, -9.0F, 0.0F, 0.0F, 18, 0, 7, 0.0F, false));

        hair3 = new AdvancedModelRenderer(this);
        hair3.setRotationPoint(0.0F, -9.0F, 4.5F);
        head.addChild(hair3);
        setRotateAngle(hair3, -0.7854F, 0.0F, 0.0F);
        hair3.cubeList.add(new ModelBox(hair3, 79, 121, -9.0F, 0.0F, 0.0F, 18, 0, 7, 0.0F, false));

        hair4 = new AdvancedModelRenderer(this);
        hair4.setRotationPoint(0.0F, -7.0F, 4.5F);
        head.addChild(hair4);
        setRotateAngle(hair4, -1.2654F, 0.0F, 0.0F);
        hair4.cubeList.add(new ModelBox(hair4, 79, 121, -9.0F, 0.0F, 0.0F, 18, 0, 7, 0.0F, false));

        jiggleController = new AdvancedModelRenderer(this, 0, 0);
        jiggleController.setRotationPoint(0, 0, 0);
        jawScaler = new AdvancedModelRenderer(this, 0, 0);
        jawScaler.setRotationPoint(1, 0, 0);
        mouthScalerX = new AdvancedModelRenderer(this, 0, 0);
        mouthScalerX.setRotationPoint(1, 0, 0);
        mouthScalerY = new AdvancedModelRenderer(this, 0, 0);
        mouthScalerY.setRotationPoint(1, 0, 0);
        bellyScaler = new AdvancedModelRenderer(this, 0, 0);
        bellyScaler.setRotationPoint(1, 0, 0);
        lookController = new AdvancedModelRenderer(this, 0, 0);
        lookController.setRotationPoint(1, 0, 0);
        betweenHands = new SocketModelRenderer(this, 0, 0);
        betweenHands.setRotationPoint(0F, 9F, -20F);
        this.upperLip.addChild(this.teethTop);
        this.head.addChild(this.maskBase);
        this.maskBase.addChild(this.leftEar);
        this.rightEar.addChild(this.rightEarring);
        this.maskBase.addChild(this.headdress3);
        this.leftUpperArm.addChild(this.leftLowerArm);
        this.rightThigh.addChild(this.rightCalf);
        this.rightArmJoint.addChild(this.rightUpperArm);
        this.jaw.addChild(this.lowerLip);
        this.rightCalf.addChild(this.rightFoot);
        this.maskBase.addChild(this.headdress2);
        this.chest.addChild(this.neckJoint);
        this.body.addChild(this.rightThigh);
        this.neckJoint.addChild(this.neck);
        this.maskBase.addChild(this.headdress4);
        this.maskFace.addChild(this.forehead);
        this.leftArmJoint.addChild(this.leftUpperArm);
        this.lowerLip.addChild(this.teethBottom);
        this.maskBase.addChild(this.headdress5);
        this.leftCalf.addChild(this.leftFoot);
        this.rightUpperArm.addChild(this.rightLowerArm);
        this.leftThigh.addChild(this.leftCalf);
        this.rightLowerArm.addChild(this.rightHand);
        this.maskBase.addChild(this.headdress1);
        this.body.addChild(this.leftThigh);
        this.maskMouth.addChild(this.jaw);
        this.jaw.addChild(this.leftLip);
        this.maskFace.addChild(this.maskMouth);
        this.maskFace.addChild(this.nose);
        this.chest.addChild(this.rightArmJoint);
        this.chest.addChild(this.leftArmJoint);
        this.maskBase.addChild(this.headdress7);
        this.jaw.addChild(this.rightLip);
        this.maskMouth.addChild(this.upperLip);
        this.leftLowerArm.addChild(this.leftHand);
        this.maskBase.addChild(this.rightEar);
        this.neck.addChild(this.headJoint);
        this.maskBase.addChild(this.headdress6);
        this.body.addChild(this.chest);
        this.leftEar.addChild(this.leftEarring);
        this.maskBase.addChild(this.maskFace);
        this.headJoint.addChild(this.head);

        updateDefaultPose();
    }

    @Override
    protected void render(EntityBarako entity, float scale) {
        GlStateManager.enableNormalize();
        this.body.render(scale);
        this.betweenHands.render(scale);
        GlStateManager.disableNormalize();
    }

    public void setDefaultAngles(EntityBarako entity, float limbSwing, float limbSwingAmount, float headYaw, float headPitch, float delta) {
        resetToDefaultPose();
        float liftLegs = entity.legsUp.getAnimationProgressSinSqrt();
        float frame = entity.frame + delta;

        if (entity.getAnimation() != EntityBarako.DIE_ANIMATION && !entity.isPotionActive(PotionHandler.FROZEN)) {
            walk(body, 0.06f, 0.05f, true, 0, -0.05f, frame, 1f);
            walk(neck, 0.06f, 0.05f, false, 0.5f, -0.05f, frame, 1f);
            swing(rightThigh, 0.06f, 0.05f * liftLegs, false, 0, 0, frame, 1f);
            swing(leftThigh, 0.06f, 0.05f * liftLegs, true, 0, 0, frame, 1f);
        }

        leftThigh.rotateAngleX -= 0.7 * liftLegs;
        rightThigh.rotateAngleX -= 0.7 * liftLegs;
        leftThigh.rotateAngleZ += 1.5 * liftLegs;
        rightThigh.rotateAngleZ -= 1.5 * liftLegs;
        leftThigh.rotateAngleY += 0.55 * liftLegs;
        rightThigh.rotateAngleY -= 0.55 * liftLegs;
    }

    @Override
    protected void animate(EntityBarako entity, float limbSwing, float limbSwingAmount, float headYaw, float headPitch, float delta) {
        if (headYaw > 70) {
            headYaw = 70f;
        }
        if (headYaw < -70) {
            headYaw = -70f;
        }
        this.setDefaultAngles(entity, limbSwing, limbSwingAmount, headYaw, headPitch, delta);

        float eyebrows = entity.angryEyebrow.getAnimationProgressSinSqrt();
        float liftLegs = entity.legsUp.getAnimationProgressSinSqrt();

        float frame = entity.frame + delta;

        if (entity.getAnimation() == EntityBarako.BELLY_ANIMATION) {
            animator.setAnimation(EntityBarako.BELLY_ANIMATION);
            animator.startKeyframe(6);
            animator.rotate(rightArmJoint, -0.7f, 0.5f, 0);
            animator.rotate(rightLowerArm, 0, 0.5f, 0.3f);
            animator.rotate(rightHand, -0.5f, -0.7f, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(1);
            animator.startKeyframe(3);
            animator.rotate(rightArmJoint, 0.1f, -0.05f, 0);
            animator.rotate(rightLowerArm, 0, -0.1f, -0.05f);
            animator.endKeyframe();
            animator.startKeyframe(0);
            animator.move(jiggleController, 1, 0, 0);
            animator.endKeyframe();
            animator.resetKeyframe(10);
            animator.startKeyframe(6);
            animator.rotate(rightArmJoint, -0.7f, 0.5f, 0);
            animator.rotate(rightLowerArm, 0, 0.5f, 0.3f);
            animator.rotate(rightHand, -0.5f, -0.7f, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(1);
            animator.startKeyframe(3);
            animator.rotate(rightArmJoint, 0.1f, -0.05f, 0);
            animator.rotate(rightLowerArm, 0, -0.1f, -0.05f);
            animator.endKeyframe();
            animator.startKeyframe(0);
            animator.move(jiggleController, 1, 0, 0);
            animator.endKeyframe();
            animator.resetKeyframe(10);
        }
        if (entity.getAnimation() == EntityBarako.TALK_ANIMATION) {
            if (entity.getWhichDialogue() == 1) {
                animator.setAnimation(EntityBarako.TALK_ANIMATION);
                animator.startKeyframe(4);
                animator.move(jawScaler, 0.2f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(4);
                animator.move(jawScaler, 0.4f, 0, 0);
                animator.move(mouthScalerX, 0.3f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(2);
                animator.move(jawScaler, -0.2f, 0, 0);
                animator.move(mouthScalerX, -0.2f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(1);
                animator.move(jawScaler, 0.2f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.5f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(4);
                animator.resetKeyframe(2);
                animator.setStaticKeyframe(8);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.05f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(6);
                animator.resetKeyframe(3);
                animator.setStaticKeyframe(6);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.05f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(2);
                animator.move(jawScaler, -0.2f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.4f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(2);
                animator.move(jawScaler, -0.2f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.4f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(6);
                animator.resetKeyframe(4);
            }
            if (entity.getWhichDialogue() == 2) {
                animator.setAnimation(EntityBarako.TALK_ANIMATION);
                animator.startKeyframe(4);
                animator.move(jawScaler, 0.2f, 0, 0);
                animator.move(mouthScalerX, 0.3f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, 0.3f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.5f, 0, 0);
                animator.move(mouthScalerX, 0.1f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, 0.1f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.7f, 0, 0);
                animator.move(mouthScalerX, 0.1f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(6);
                animator.resetKeyframe(4);
            }
            if (entity.getWhichDialogue() == 3) {
                animator.setAnimation(EntityBarako.TALK_ANIMATION);
                animator.startKeyframe(4);
                animator.move(jawScaler, -0.5f, 0, 0);
                animator.move(mouthScalerX, 0, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.3f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(3);
                animator.move(jawScaler, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.3f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.resetKeyframe(2);
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.6f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.resetKeyframe(2);
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.4f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(3);
                animator.move(jawScaler, -0.2f, 0, 0);
                animator.move(mouthScalerX, -0.3f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(1);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.05f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.resetKeyframe(2);
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.4f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(4);
                animator.resetKeyframe(4);
            }
            if (entity.getWhichDialogue() == 4) {
                animator.setAnimation(EntityBarako.TALK_ANIMATION);
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(2);
                animator.move(jawScaler, -0.2f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.5f, 0, 0);
                animator.move(mouthScalerX, 0f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.1f, 0, 0);
                animator.move(mouthScalerX, -0.2f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.3f, 0, 0);
                animator.move(mouthScalerX, 0.1f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(5);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.4f, 0, 0);
                animator.move(mouthScalerX, 0f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(2);
                animator.move(jawScaler, -0.5f, 0, 0);
                animator.move(mouthScalerX, -0.3f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, 0.1f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.6f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(4);
                animator.resetKeyframe(4);
            }
            if (entity.getWhichDialogue() == 5) {
                animator.setAnimation(EntityBarako.TALK_ANIMATION);
                animator.startKeyframe(2);//q
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);//e
                animator.move(jawScaler, 0.2f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(1);
                animator.startKeyframe(2);//n
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(2);//da
                animator.move(jawScaler, 0.5f, 0, 0);
                animator.move(mouthScalerX, 0.1f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(2);//koo
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(4);
                animator.startKeyframe(2);//too
                animator.move(jawScaler, 0.2f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.5f, 0, 0);
                animator.move(mouthScalerX, 0f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(6);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.1f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(1);
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.3f, 0, 0);
                animator.move(mouthScalerX, -0.3f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);
                animator.move(jawScaler, -0.5f, 0, 0);
                animator.move(mouthScalerX, 0.1f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(8);
                animator.move(jawScaler, 0.5f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(10);
                animator.resetKeyframe(8);
            }
            if (entity.getWhichDialogue() == 6) {
                animator.setAnimation(EntityBarako.TALK_ANIMATION);
                animator.startKeyframe(2);//q
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);//e
                animator.move(jawScaler, 0.2f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(1);
                animator.startKeyframe(2);//n
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(2);//da
                animator.move(jawScaler, 0.5f, 0, 0);
                animator.move(mouthScalerX, 0.1f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(2);//koo
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(4);
                animator.startKeyframe(2);//too
                animator.move(jawScaler, 0.2f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(4);
                animator.startKeyframe(5);
                animator.move(jawScaler, 0.5f, 0, 0);
                animator.move(mouthScalerX, 0f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(10);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.1f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(1);
                animator.move(jawScaler, 0f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.3f, 0, 0);
                animator.move(mouthScalerX, -0.3f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(1);
                animator.move(jawScaler, -0.5f, 0, 0);
                animator.move(mouthScalerX, 0.1f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(8);
                animator.move(jawScaler, 0.5f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(10);
                animator.resetKeyframe(8);
            }
        }

        /*if (entity.getAnimation() == 3) {
            if (entity.whichDialogue == 1) {
                animator.setAnimation(2);
                animator.startKeyframe(4);
                animator.move(jawScaler, 0.2f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(4);
                animator.move(jawScaler, 0.4f, 0, 0);
                animator.move(mouthScalerX, 0.3f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(2);
                animator.move(jawScaler, -0.2f, 0, 0);
                animator.move(mouthScalerX, -0.2f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(1);
                animator.move(jawScaler, 0.2f, 0, 0);
                animator.move(mouthScalerX, 0.2f, 0, 0);
                animator.endKeyframe();
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.5f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(4);
                animator.resetKeyframe(2);
                animator.setStaticKeyframe(8);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.05f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(6);
                animator.resetKeyframe(3);
                animator.setStaticKeyframe(6);
                animator.startKeyframe(2);
                animator.move(jawScaler, 0.05f, 0, 0);
                animator.move(mouthScalerX, -0.5f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(2);
                animator.move(jawScaler, -0.2f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.4f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(2);
                animator.startKeyframe(2);
                animator.move(jawScaler, -0.2f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(3);
                animator.startKeyframe(3);
                animator.move(jawScaler, 0.4f, 0, 0);
                animator.move(mouthScalerX, -0.4f, 0, 0);
                animator.endKeyframe();
                animator.setStaticKeyframe(6);
                animator.resetKeyframe(4);
            }
        }*/

        if (entity.getAnimation() == EntityBarako.SUNSTRIKE_ANIMATION) {
            animator.setAnimation(EntityBarako.SUNSTRIKE_ANIMATION);
            animator.startKeyframe(4);
            animator.rotate(rightArmJoint, -0.9f, 0.5f, 0);
            animator.rotate(rightLowerArm, 0, 0.5f, 0.3f);
            animator.rotate(rightHand, -0.5f, -0.7f, 0);
            animator.rotate(chest, 0, 0.4f, 0);
            animator.rotate(neck, 0, -0.4f, 0);
            animator.move(chest, -2, 0, 0);
            animator.move(neck, -2, 0, 0);
            animator.rotate(leftArmJoint, 0, -0.6f, 0);
            animator.rotate(leftLowerArm, 0, 0, 0.1f);
            animator.endKeyframe();
            animator.setStaticKeyframe(3);
            animator.startKeyframe(2);
            animator.rotate(rightUpperArm, -0.1f, (float) (-0.5f + (headYaw * Math.PI / 180)), 0);
            animator.rotate(rightLowerArm, 0, 0f, 1.1f);
            animator.rotate(rightHand, -1f, -0.7f, 0);
            animator.rotate(chest, 0, -0.5f, 0);
            animator.rotate(neck, 0, 0.5f, 0);
            animator.move(chest, 3, 0, 0);
            animator.move(neck, 3, 0, 0);
            animator.rotate(leftUpperArm, 0, 0.4f, 0);
            animator.rotate(leftLowerArm, 0, 0, -0.2f);
            animator.move(jawScaler, 0.5f, 0, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(2);
            animator.resetKeyframe(4);
        }

        if (entity.getAnimation() == EntityBarako.ATTACK_ANIMATION) {
            animator.setAnimation(EntityBarako.ATTACK_ANIMATION);
            animator.startKeyframe(8);
            animator.move(bellyScaler, -0.2f, 0, 0);
            animator.rotate(neck, 0.3f, 0, 0);
            animator.rotate(head, 0.3f, 0, 0);
            animator.rotate(rightArmJoint, 0, -0.9f, -0.5f);
            animator.rotate(rightLowerArm, -0.1f, 0, -0.2f);
            animator.rotate(rightHand, -0.5f, 0.5f, 0);
            animator.rotate(leftArmJoint, 0, 0.9f, 0.5f);
            animator.rotate(leftLowerArm, -0.1f, 0, 0.2f);
            animator.rotate(leftHand, -0.5f, -0.5f, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(4);
            animator.startKeyframe(3);
            animator.move(bellyScaler, 0.1f, 0, 0);
            animator.move(jiggleController, 1f, 0, 0);
            animator.move(jawScaler, 1f, 1f, 0);
            animator.rotate(neck, -0.2f, 0, 0);
            animator.rotate(head, -0.2f, 0, 0);
            animator.rotate(rightUpperArm, 0, 0, 0);
            animator.rotate(rightArmJoint, -0.5f, 0.9f, -0.5f);
            animator.rotate(rightLowerArm, -0.1f, 0, 0.2f);
            animator.rotate(rightHand, -0.5f, 0.5f, 0);
            animator.rotate(leftUpperArm, 0, 0, 0);
            animator.rotate(leftArmJoint, -0.5f, -0.9f, 0.5f);
            animator.rotate(leftLowerArm, -0.1f, 0, -0.2f);
            animator.rotate(leftHand, -0.5f, -0.5f, 0);
            animator.endKeyframe();
            animator.startKeyframe(9);
            animator.move(bellyScaler, 0.1f, 0, 0);
            animator.move(jawScaler, 1f, 1f, 0);
            animator.rotate(neck, -0.2f, 0, 0);
            animator.rotate(head, -0.2f, 0, 0);
            animator.rotate(rightUpperArm, 0, 0, 0);
            animator.rotate(rightArmJoint, -0.5f, 0.9f, -0.5f);
            animator.rotate(rightLowerArm, -0.1f, 0, 0.2f);
            animator.rotate(rightHand, -0.5f, 0.5f, 0);
            animator.rotate(leftUpperArm, 0, 0, 0);
            animator.rotate(leftArmJoint, -0.5f, -0.9f, 0.5f);
            animator.rotate(leftLowerArm, -0.1f, 0, -0.2f);
            animator.rotate(leftHand, -0.5f, -0.5f, 0);
            animator.endKeyframe();
            animator.resetKeyframe(6);
        }

        if (entity.getAnimation() == EntityBarako.SPAWN_ANIMATION) {
            animator.setAnimation(EntityBarako.SPAWN_ANIMATION);
            animator.startKeyframe(5);
            animator.move(bellyScaler, 0.1f, 0, 0);
            animator.move(mouthScalerX, 0.4f, 0, 0);
            animator.move(jawScaler, 0.8f, 0, 0);
            animator.move(chest, 0, 0, 3);
            animator.rotate(chest, -0.3f, 0, 0);
            animator.rotate(neckJoint, -0.3f, 0, 0);
            animator.rotate(headJoint, 0.2f, 0, 0);
            animator.rotate(leftUpperArm, 0, 0.2f, 0);
            animator.rotate(leftLowerArm, 0, 0, -0.2f);
            animator.rotate(rightArmJoint, -0.7f, 0.5f, 0);
            animator.rotate(rightLowerArm, 0, 0.5f, 0.3f);
            animator.rotate(rightHand, -0.5f, -0.7f, 0);
            animator.rotate(body, -0.1f, 0, 0);
            animator.rotate(leftThigh, 0, -0.1f * liftLegs, 0);
            animator.rotate(rightThigh, 0, 0.1f * liftLegs, 0);
            animator.rotate(leftThigh, 0.1f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, 0.1f * (1 - liftLegs), 0, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(2);
            animator.startKeyframe(2);
            animator.move(bellyScaler, -0.1f, 0, 0);
            animator.move(jiggleController, 1f, 0, 0);
            animator.move(mouthScalerX, -0.4f, 0, 0);
            animator.move(jawScaler, 0.4f, 0, 0);
            animator.rotate(neckJoint, 0.3f, 0, 0);
            animator.rotate(headJoint, -0.6f, 0, 0);
            animator.rotate(body, 0.3f, 0, 0);
            animator.rotate(leftThigh, 0, 0.3f * liftLegs, 0);
            animator.rotate(rightThigh, 0, -0.3f * liftLegs, 0);
            animator.rotate(leftThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.endKeyframe();
            animator.startKeyframe(5);
            animator.move(bellyScaler, -0.1f, 0, 0);
            animator.move(mouthScalerX, -0.4f, 0, 0);
            animator.move(jawScaler, 0.4f, 0, 0);
            animator.rotate(neckJoint, 0.3f, 0, 0);
            animator.rotate(headJoint, -0.6f, 0, 0);
            animator.rotate(body, 0.3f, 0, 0);
            animator.rotate(leftThigh, 0, 0.3f * liftLegs, 0);
            animator.rotate(rightThigh, 0, -0.3f * liftLegs, 0);
            animator.rotate(leftThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.endKeyframe();
            animator.resetKeyframe(4);
        }

        if (entity.getAnimation() == EntityBarako.SOLAR_BEAM_ANIMATION) {
            animator.setAnimation(EntityBarako.SOLAR_BEAM_ANIMATION);
            animator.startKeyframe(18);
            animator.move(bellyScaler, 0.1f, 0, 0);
            animator.move(mouthScalerX, -0.4f, 0, 0);
            animator.move(jawScaler, 0.4f, 0, 0);
            animator.move(chest, 0, 0, 3);
            animator.rotate(chest, -0.3f, 0, 0);
            animator.rotate(neckJoint, -0.3f, 0, 0);
            animator.rotate(headJoint, 0.2f, 0, 0);
            animator.rotate(leftArmJoint, -0.7f, -0.5f, 0);
            animator.rotate(leftLowerArm, 0, -0.5f, -0.3f);
            animator.rotate(leftHand, -0.5f, 0.7f, 0);
            animator.rotate(rightArmJoint, -0.7f, 0.5f, 0);
            animator.rotate(rightLowerArm, 0, 0.5f, 0.3f);
            animator.rotate(rightHand, -0.5f, -0.7f, 0);
            animator.rotate(body, -0.1f, 0, 0);
            animator.rotate(leftThigh, 0, -0.1f * liftLegs, 0);
            animator.rotate(rightThigh, 0, 0.1f * liftLegs, 0);
            animator.rotate(leftThigh, 0.1f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, 0.1f * (1 - liftLegs), 0, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(7);
            animator.startKeyframe(4);
            animator.move(bellyScaler, -0.1f, 0, 0);
            animator.move(jiggleController, 0.7f, 1, 0);
            animator.move(mouthScalerX, 0.5f, 0, 0);
            animator.move(jawScaler, 2f, 0, 0);
            animator.rotate(neckJoint, 0.3f, 0, 0);
            animator.rotate(headJoint, -0.6f, 0, 0);
            animator.rotate(body, 0.3f, 0, 0);
            animator.rotate(leftThigh, 0, 0.3f * liftLegs, 0);
            animator.rotate(rightThigh, 0, -0.3f * liftLegs, 0);
            animator.rotate(leftThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.rotate(leftArmJoint, 0.8f, -1.5f, -0.8f);
            animator.rotate(leftLowerArm, 0, -0.5f, 0.2f);
            animator.rotate(leftHand, -0.5f, 0.7f, 0);
            animator.rotate(rightArmJoint, 0.8f, 1.5f, 0.8f);
            animator.rotate(rightLowerArm, 0, 0.5f, -0.2f);
            animator.rotate(rightHand, -0.5f, -0.7f, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(50);
            animator.startKeyframe(10);
            animator.move(bellyScaler, -0.1f, 0, 0);
            animator.move(mouthScalerX, 0.5f, 0, 0);
            animator.move(jawScaler, 2f, 0, 0);
            animator.rotate(neckJoint, 0.3f, 0, 0);
            animator.rotate(headJoint, -0.6f, 0, 0);
            animator.rotate(body, 0.3f, 0, 0);
            animator.rotate(leftThigh, 0, 0.3f * liftLegs, 0);
            animator.rotate(rightThigh, 0, -0.3f * liftLegs, 0);
            animator.rotate(leftThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.rotate(leftArmJoint, 0.8f, -1.5f, -0.8f);
            animator.rotate(leftLowerArm, 0, -0.5f, 0.2f);
            animator.rotate(leftHand, -0.5f, 0.7f, 0);
            animator.rotate(rightArmJoint, 0.8f, 1.5f, 0.8f);
            animator.rotate(rightLowerArm, 0, 0.5f, -0.2f);
            animator.rotate(rightHand, -0.5f, -0.7f, 0);
            animator.endKeyframe();
            animator.resetKeyframe(10);
        }

        if (entity.getAnimation() == EntityBarako.DIE_ANIMATION) {
            animator.setAnimation(EntityBarako.DIE_ANIMATION);
            animator.startKeyframe(2);
            animator.move(jiggleController, 1, 0, 0);
            animator.move(bellyScaler, -0.1f, 0, 0);
            animator.move(mouthScalerX, 0.5f, 0, 0);
            animator.rotate(neckJoint, 0.3f, 0, 0);
            animator.rotate(headJoint, 0.3f, 0, 0);
            animator.rotate(rightArmJoint, -0.5f, 0.2f, 0);
            animator.rotate(rightLowerArm, 0, 0.2f, 0.1f);
            animator.rotate(rightHand, -0.5f, -0.7f, 0);
            animator.rotate(leftArmJoint, -0.5f, -0.2f, 0);
            animator.rotate(leftLowerArm, 0, -0.2f, 0.1f);
            animator.rotate(leftHand, -0.5f, 0.7f, 0);
            animator.rotate(leftThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.move(lookController, -1, 0, 0);
            animator.endKeyframe();
            animator.resetKeyframe(5);
            animator.startKeyframe(5);
            animator.move(mouthScalerX, 0.2f, 0, 0);
            animator.move(jawScaler, 1.5f, 0, 0);
            animator.rotate(neckJoint, -0.3f, 0, 0);
            animator.rotate(headJoint, -0.4f, 0, 0);
            animator.rotate(rightUpperArm, 0, 0, 0);
            animator.rotate(rightArmJoint, -0.5f, 0.9f, -0.5f);
            animator.rotate(rightLowerArm, -0.1f, 0, 0.2f);
            animator.rotate(rightHand, -0.5f, 0.5f, 0);
            animator.rotate(leftUpperArm, 0, 0, 0);
            animator.rotate(leftArmJoint, -0.5f, -0.9f, 0.5f);
            animator.rotate(leftLowerArm, -0.1f, 0, -0.2f);
            animator.rotate(leftHand, -0.5f, -0.5f, 0);
            animator.move(jiggleController, 0, 1, 0);
            animator.move(lookController, -1, 0, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(25);
            animator.startKeyframe(10);
            animator.move(mouthScalerX, 0.2f, 0, 0);
            animator.move(jawScaler, 1.5f, 0, 0);
            animator.rotate(neckJoint, -0.3f, 0, 0);
            animator.rotate(headJoint, -0.4f, 0, 0);
            animator.rotate(rightUpperArm, 0, 0, 0);
            animator.rotate(rightArmJoint, -0.5f, 0.9f, -0.5f);
            animator.rotate(rightLowerArm, -0.1f, 0, 0.2f);
            animator.rotate(rightHand, -0.5f, 0.5f, 0);
            animator.rotate(leftUpperArm, 0, 0, 0);
            animator.rotate(leftArmJoint, -0.5f, -0.9f, 0.5f);
            animator.rotate(leftLowerArm, -0.1f, 0, -0.2f);
            animator.rotate(leftHand, -0.5f, -0.5f, 0);
            animator.move(lookController, -1, 0, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(8);
            animator.startKeyframe(15);
            animator.rotate(neckJoint, -0.3f, 0, 0);
            animator.rotate(headJoint, -0.4f, 0, 0);
            animator.rotate(rightUpperArm, 0, 0, 0);
            animator.rotate(rightArmJoint, -0.5f, 0.9f, -0.5f);
            animator.rotate(rightLowerArm, -0.1f, 0, 0.2f);
            animator.rotate(rightHand, -0.5f, 0.5f, 0);
            animator.rotate(leftUpperArm, 0, 0, 0);
            animator.rotate(leftArmJoint, -0.5f, -0.9f, 0.5f);
            animator.rotate(leftLowerArm, -0.1f, 0, -0.2f);
            animator.rotate(leftHand, -0.5f, -0.5f, 0);
            animator.move(bellyScaler, 0, 0.9999f, 0);
            animator.move(body, 0, -36, 4);
            animator.move(lookController, -1, 0, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(17);
            animator.startKeyframe(3);
            animator.rotate(neckJoint, -0.3f, 0, 0);
            animator.rotate(headJoint, -0.4f, 0, 0);
            animator.move(bellyScaler, 0, 0.9999f, 0);
            animator.move(body, 0, -10, 4);
            animator.move(lookController, -1, 0, 0);
            animator.endKeyframe();
            animator.startKeyframe(2);
            animator.rotate(neckJoint, -0.3f, 0, 0);
            animator.rotate(headJoint, -1.2f, 0, 0);
            animator.rotate(headdress1, -0.25f, 0, 0);
            animator.rotate(headdress2, -0.25f, 0, 0);
            animator.rotate(headdress3, -0.25f, 0, 0);
            animator.rotate(headdress4, -0.25f, 0, 0);
            animator.rotate(headdress5, -0.25f, 0, 0);
            animator.rotate(headdress6, -0.25f, 0, 0);
            animator.rotate(headdress7, -0.25f, 0, 0);
            animator.move(bellyScaler, 0, 0.9999f, 0);
            animator.move(body, 0, -5, 10);
            animator.move(lookController, -1, 0, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(100);

            swing(rightArmJoint, 2f, 0.05f * jiggleController.rotationPointY, false, 0, 0, frame, 1);
            swing(leftArmJoint, 2f, 0.05f * jiggleController.rotationPointY, true, 0, 0, frame, 1);
            walk(rightArmJoint, 2f, 0.05f * jiggleController.rotationPointY, false, 0, 0, frame, 1);
            walk(leftArmJoint, 2f, 0.05f * jiggleController.rotationPointY, false, 0, 0, frame, 1);
            swing(neck, 0.5f, 0.1f * jiggleController.rotationPointY, false, 0, 0, frame, 1);
            swing(head, 0.5f, 0.1f * jiggleController.rotationPointY, false, 0, 0, frame, 1);
            walk(leftThigh, 0.5f, 0.15f * jiggleController.rotationPointY * (1 - liftLegs), false, 0, 0, frame, 1);
            walk(rightThigh, 0.5f, 0.15f * jiggleController.rotationPointY * (1 - liftLegs), true, 0, 0, frame, 1);
            flap(body, 0.5f, 0.05f * jiggleController.rotationPointY * (1 - liftLegs), true, 0, 0, frame, 1);
            jawScaler.rotationPointX += 0.1 * jiggleController.rotationPointY * Math.cos(frame * 2);
        }

        if (entity.getAnimation() == EntityBarako.BLESS_ANIMATION) {
            animator.setAnimation(EntityBarako.BLESS_ANIMATION);
            animator.startKeyframe(15);
            animator.move(mouthScalerX, -0.4f, 0, 0);
            animator.move(jawScaler, 0.4f, 0, 0);
            animator.move(jiggleController, 0, 1, 0);
            animator.rotate(chest, -0.1f, 0, 0);
            animator.rotate(neckJoint, -0.3f, 0, 0);
            animator.rotate(headJoint, 0.2f, 0, 0);
            animator.rotate(rightUpperArm, 0, 0, 0);
            animator.rotate(rightArmJoint, -0.5f, 0.9f, -0.5f);
            animator.rotate(rightLowerArm, -0.1f, 0, 0.2f);
            animator.rotate(rightHand, -0.5f, 0.5f, 0);
            animator.rotate(leftUpperArm, 0, 0, 0);
            animator.rotate(leftArmJoint, -0.5f, -0.9f, 0.5f);
            animator.rotate(leftLowerArm, -0.1f, 0, -0.2f);
            animator.rotate(leftHand, -0.5f, -0.5f, 0);
            animator.rotate(body, -0.1f, 0, 0);
            animator.rotate(leftThigh, 0, -0.1f * liftLegs, 0);
            animator.rotate(rightThigh, 0, 0.1f * liftLegs, 0);
            animator.rotate(leftThigh, 0.1f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, 0.1f * (1 - liftLegs), 0, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(30);
            animator.resetKeyframe(15);

            jawScaler.rotationPointX += 0.1 * jiggleController.rotationPointY * Math.cos(frame * 1.5);
        }

        if (entity.getAnimation() == EntityBarako.HURT_ANIMATION) {
            animator.setAnimation(EntityBarako.HURT_ANIMATION);
            animator.startKeyframe(2);
            animator.move(jiggleController, 1, 0, 0);
            animator.move(bellyScaler, -0.1f, 0, 0);
            animator.move(mouthScalerX, 0.5f, 0, 0);
            animator.rotate(neckJoint, 0.3f, 0, 0);
            animator.rotate(headJoint, 0.3f, 0, 0);
            animator.rotate(rightArmJoint, -0.5f, 0.2f, 0);
            animator.rotate(rightLowerArm, 0, 0.2f, 0.1f);
            animator.rotate(rightHand, -0.5f, -0.7f, 0);
            animator.rotate(leftArmJoint, -0.5f, -0.2f, 0);
            animator.rotate(leftLowerArm, 0, -0.2f, 0.1f);
            animator.rotate(leftHand, -0.5f, 0.7f, 0);
            animator.rotate(leftThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, -0.3f * (1 - liftLegs), 0, 0);
            animator.endKeyframe();
            animator.resetKeyframe(10);
        }

        if (entity.getAnimation() == EntityBarako.SUPERNOVA_ANIMATION) {
            animator.setAnimation(EntityBarako.SUPERNOVA_ANIMATION);
            animator.startKeyframe(21);
            animator.rotate(neck, -0.2f, 0, 0);
            animator.rotate(head, -0.3f, 0, 0);
            animator.rotate(rightUpperArm, -0.2f, 0, -1.9f);
            animator.rotate(rightArmJoint, -0.5f, 1.5f, 1.5f);
            animator.rotate(rightLowerArm, -0.1f, 0, 0.8f);
            animator.rotate(rightHand, -2f, 0.5f, 0);
            animator.rotate(leftUpperArm, -0.2f, 0, 1.9f);
            animator.rotate(leftArmJoint, -0.5f, -1.5f, -1.5f);
            animator.rotate(leftLowerArm, -0.1f, 0, -0.8f);
            animator.rotate(leftHand, -2f, -0.5f, 0);
            animator.rotate(body, -0.15f, 0, 0);
            animator.rotate(leftThigh, 0, -0.15f * liftLegs, 0);
            animator.rotate(rightThigh, 0, 0.15f * liftLegs, 0);
            animator.rotate(leftThigh, 0.15f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, 0.15f * (1 - liftLegs), 0, 0);
            animator.move(betweenHands, 0, -45, 8);
            animator.move(lookController, -1, 0, 0);
            animator.endKeyframe();
            animator.setStaticKeyframe(9);
            animator.startKeyframe(6);
            animator.move(bellyScaler, -0.2f, 0, 0);
            animator.rotate(neck, 0.3f, 0, 0);
            animator.rotate(head, 0.3f, 0, 0);
            animator.rotate(rightArmJoint, 0, -0.4f, 0.2f);
            animator.rotate(rightLowerArm, -0.1f, 0, -0.3f);
            animator.rotate(rightHand, -2.5f, -0.5f, -0.1f);
            animator.rotate(leftArmJoint, 0, 0.4f, -0.2f);
            animator.rotate(leftLowerArm, -0.1f, 0, 0.3f);
            animator.rotate(leftHand, -2.5f, 0.5f, 0.1f);
            animator.move(lookController, -1, 0, 0);
            animator.move(betweenHands, 0, -2, 2);
            animator.move(jiggleController, 0f, 0, 1f);
            animator.endKeyframe();
            animator.startKeyframe(9);
            animator.move(bellyScaler, -0.2f, 0, 0);
            animator.rotate(neck, 0.3f, 0, 0);
            animator.rotate(head, 0.3f, 0, 0);
            animator.rotate(rightArmJoint, 0, -0.6f, 0.2f);
            animator.rotate(rightLowerArm, -0.1f, 0f, -0.2f);
            animator.rotate(rightHand, -2.6f, -0.4f, -0.3f);
            animator.rotate(leftArmJoint, 0, 0.6f, -0.2f);
            animator.rotate(leftLowerArm, -0.1f, 0, 0.2f);
            animator.rotate(leftHand, -2.6f, 0.4f, 0.3f);
            animator.move(lookController, -1, 0, 0);
            animator.move(betweenHands, 0, -2, 2);
            animator.move(jiggleController, 0f, 0, 0.6f);
            animator.endKeyframe();
            animator.startKeyframe(3);
            animator.move(bellyScaler, -0.1f, 0, 0);
            animator.move(jiggleController, 0.5f, 1, 0);
            animator.move(mouthScalerX, 0.2f, 0, 0);
            animator.move(jawScaler, 1f, 0, 0);
            animator.rotate(neckJoint, 0.3f, 0, 0);
            animator.rotate(headJoint, -0.6f, 0, 0);
            animator.rotate(body, 0.1f, 0, 0);
            animator.rotate(leftThigh, 0, 0.1f * liftLegs, 0);
            animator.rotate(rightThigh, 0, -0.1f * liftLegs, 0);
            animator.rotate(leftThigh, -0.1f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, -0.1f * (1 - liftLegs), 0, 0);
            animator.rotate(leftArmJoint, -0.3f, -0.4f, -0.2f);
            animator.rotate(leftLowerArm, 0, -0.5f, -0.8f);
            animator.rotate(leftHand, -2.4f, 0.7f, 0);
            animator.rotate(rightArmJoint, -0.3f, 0.4f, 0.2f);
            animator.rotate(rightLowerArm, 0, 0.5f, 0.8f);
            animator.rotate(rightHand, -2.4f, -0.7f, 0);
            animator.move(betweenHands, 0, 0, 2);
            animator.endKeyframe();
            animator.setStaticKeyframe(32);
            animator.startKeyframe(10);
            animator.move(bellyScaler, -0.1f, 0, 0);
            animator.move(mouthScalerX, 0.2f, 0, 0);
            animator.move(jawScaler, 1f, 0, 0);
            animator.rotate(neckJoint, 0.3f, 0, 0);
            animator.rotate(headJoint, -0.6f, 0, 0);
            animator.rotate(body, 0.1f, 0, 0);
            animator.rotate(leftThigh, 0, 0.1f * liftLegs, 0);
            animator.rotate(rightThigh, 0, -0.1f * liftLegs, 0);
            animator.rotate(leftThigh, -0.1f * (1 - liftLegs), 0, 0);
            animator.rotate(rightThigh, -0.1f * (1 - liftLegs), 0, 0);
            animator.rotate(leftArmJoint, -0.3f, -0.4f, -0.2f);
            animator.rotate(leftLowerArm, 0, -0.5f, -0.8f);
            animator.rotate(leftHand, -2.4f, 0.7f, 0);
            animator.rotate(rightArmJoint, -0.3f, 0.4f, 0.2f);
            animator.rotate(rightLowerArm, 0, 0.5f, 0.8f);
            animator.rotate(rightHand, -2.4f, -0.7f, 0);
            animator.endKeyframe();
            animator.resetKeyframe(10);

            jawScaler.rotationPointX += 0.1 * jiggleController.rotationPointY * Math.cos(frame * 2.5);

            animator.rotate(rightArmJoint, 0, -0.5f, 0.2f);
            animator.rotate(rightLowerArm, -0.1f, 0, -0.3f);
            animator.rotate(rightHand, -2.5f, -0.5f, -0.1f);
            rightArmJoint.rotateAngleY -= 0.07 * jiggleController.rotationPointZ * Math.cos(frame * 3.2);
            rightLowerArm.rotateAngleZ += 0.07 * jiggleController.rotationPointZ * Math.cos(frame * 3.2);
            leftArmJoint.rotateAngleY += 0.07 * jiggleController.rotationPointZ * Math.cos(frame * 3.2);
            leftLowerArm.rotateAngleZ -= 0.07 * jiggleController.rotationPointZ * Math.cos(frame * 3.2);
        }

        float jiggleSpeed = 2.5f;
        float jiggleScale = (float) (jiggleController.rotationPointX * 0.1 * Math.cos(jiggleSpeed * frame));
        float breathScale = (float) (0.05 + 0.02 * Math.cos(0.06 * frame));
        float scaler = bellyScaler.rotationPointX + jiggleScale + breathScale;
        if (entity.getAnimation() == EntityBarako.ATTACK_ANIMATION || entity.getAnimation() == EntityBarako.SOLAR_BEAM_ANIMATION) {
            headdress1.rotateAngleX += jiggleController.rotationPointX * 0.1 * Math.cos(jiggleSpeed * frame);
            headdress2.rotateAngleX += jiggleController.rotationPointX * 0.1 * Math.cos(jiggleSpeed * frame);
            headdress3.rotateAngleX += jiggleController.rotationPointX * 0.1 * Math.cos(jiggleSpeed * frame);
            headdress4.rotateAngleX += jiggleController.rotationPointX * 0.1 * Math.cos(jiggleSpeed * frame);
            headdress5.rotateAngleX += jiggleController.rotationPointX * 0.1 * Math.cos(jiggleSpeed * frame);
            headdress6.rotateAngleX += jiggleController.rotationPointX * 0.1 * Math.cos(jiggleSpeed * frame);
            headdress7.rotateAngleX += jiggleController.rotationPointX * 0.1 * Math.cos(jiggleSpeed * frame);
        }
        if (!entity.isPotionActive(PotionHandler.FROZEN)) {
            body.setScale(scaler * (1 - bellyScaler.rotationPointY), scaler * (1 - bellyScaler.rotationPointY), scaler * (1 - bellyScaler.rotationPointY));
            chest.setScale(1 / scaler, 1 / scaler, 1 / scaler);
            rightThigh.setScale(1 / scaler, 1 / scaler, 1 / scaler);
            leftThigh.setScale(1 / scaler, 1 / scaler, 1 / scaler);
        }
        else {
            body.setScale(1, 1, 1);
            chest.setScale(1, 1, 1);
            rightThigh.setScale(1, 1, 1);
            leftThigh.setScale(1, 1, 1);
        }

        if (entity.getAnimation() != EntityBarako.SOLAR_BEAM_ANIMATION) {
            faceTarget(headYaw * lookController.rotationPointX, headPitch * lookController.rotationPointX, 2.0F, neckJoint);
            faceTarget(headYaw * lookController.rotationPointX, headPitch * lookController.rotationPointX, 2.0F, headJoint);
        } else {
            faceTarget(headYaw, headPitch, 1.0F, head);
        }

        chest.rotationPointY += jiggleController.rotationPointX * 1.5 * Math.cos(jiggleSpeed * frame);
        chest.rotationPointZ += jiggleController.rotationPointX * 0.7 * Math.cos(jiggleSpeed * frame);
        leftThigh.rotationPointX -= jiggleController.rotationPointX * 0.75 * Math.cos(jiggleSpeed * frame);
        rightThigh.rotationPointX += jiggleController.rotationPointX * 0.75 * Math.cos(jiggleSpeed * frame);
        leftThigh.rotationPointZ -= jiggleController.rotationPointX * 0.5 * Math.cos(jiggleSpeed * frame);
        rightThigh.rotationPointZ -= jiggleController.rotationPointX * 0.5 * Math.cos(jiggleSpeed * frame);
        leftThigh.rotationPointY += jiggleController.rotationPointX * 0.3 * Math.cos(jiggleSpeed * frame);
        rightThigh.rotationPointY += jiggleController.rotationPointX * 0.3 * Math.cos(jiggleSpeed * frame);
        body.rotationPointZ -= jiggleController.rotationPointX * 2 * Math.cos(jiggleSpeed * frame);
        chest.rotationPointZ += jiggleController.rotationPointX * 2 * Math.cos(jiggleSpeed * frame);
        leftThigh.rotationPointZ += jiggleController.rotationPointX * 2 * Math.cos(jiggleSpeed * frame);
        rightThigh.rotationPointZ += jiggleController.rotationPointX * 2 * Math.cos(jiggleSpeed * frame);

        mouthScalerY.rotationPointX += eyebrows * 0.5f;
        mouthScalerX.rotationPointX += eyebrows * 0.3f;

        float jawScale = (float) (jawScaler.rotationPointX + 0.15 * jawScaler.rotationPointY * Math.cos(frame * 2.5));//(float) (1 + 1 * Math.pow(Math.sin(frame * 0.3), 2));
        float mouthScaleX = mouthScalerX.rotationPointX;//(float) (1 - 0.25 * Math.pow(Math.sin(frame * 0.17), 2));
        float mouthScaleY = mouthScalerY.rotationPointX;//(float) (1 - 0.25 * Math.pow(Math.sin(frame * 0.17), 2));
        float foreheadScale = (float) (1f + 0.25 * eyebrows);
        jaw.setScale(jaw.scaleX, jawScale, jaw.scaleZ);
        lowerLip.setScale(lowerLip.scaleX, 1 / jawScale, lowerLip.scaleZ);
        leftLip.setScale(1 / mouthScaleX, 1 / jawScale * (jawScale * 4 - 2) / 2, leftLip.scaleZ);
        rightLip.setScale(1 / mouthScaleX, 1 / jawScale * (jawScale * 4 - 2) / 2, rightLip.scaleZ);
        maskMouth.setScale(mouthScaleX, mouthScaleY, maskMouth.scaleZ);
        forehead.setScale(forehead.scaleX, foreheadScale, forehead.scaleZ);
        maskBase.setScale(1 / (1 - bellyScaler.rotationPointY), 1 / (1 - bellyScaler.rotationPointY), 1 / (1 - bellyScaler.rotationPointY));

        if (entity.betweenHandPos.length > 0) entity.betweenHandPos[0] = betweenHands.getWorldPos(entity, delta);
    }
}
